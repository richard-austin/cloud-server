plugins {
    id 'groovy'
    id 'war'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'cloudwebapp'
version = '11.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '3.4.1'
    implementation group: 'jakarta.jms', name: 'jakarta.jms-api', version: '3.1.0'
    implementation group: 'org.springframework', name: 'spring-messaging', version: '6.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.3'

    implementation group: 'org.apache.activemq', name: 'activemq-broker', version: '6.1.4'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.17.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
    implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.jetbrains:annotations:24.1.0'
    implementation group: 'jakarta.mail', name: 'jakarta.mail-api', version: '2.1.3'
    implementation (group: 'org.eclipse.angus', name: 'angus-mail', version: '2.0.3')
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0'
    implementation group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version: '1.0.0'
    implementation 'org.projectlombok:lombok:1.18.36'



    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.groovy:groovy'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    runtimeOnly 'com.h2database:h2'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    jvmArgs('-Dspring.profiles.active=dev')
    systemProperty 'server.port', '8086'
}

bootWar.dependsOn([':cloudFrontEnd:buildClient'])
compileJava.dependsOn(':cloudwebapp:setVersion')

bootWar {
    webInf {
        from('../cloudFrontEnd/dist/client/browser')
        into('classes/static')
    }
}

tasks.register('setVersion', Exec) {
    group = 'build'
    description = 'Sets the version.txt file with the current version from git describe'
    workingDir "$projectDir"
    executable "sh"
    args = ['-c', 'git describe --tags --dirty | tr -d \'\\n\' > src/main/resources/version.txt']
}

tasks.register('buildDebFile', Exec) {
    group='build'
    dependsOn([':cloudwebapp:bootWar'])
    group = 'build'
    workingDir "$projectDir/../xtrn-files-and-config/deb-file-creation"
    commandLine './create-deb.sh'
}

tasks.withType(GroovyCompile).configureEach {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

description = 'cloudwebapp'

