buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:7.0.4"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.6"
 //       classpath 'org.grails.plugins:quartz:2.0.13' // Needed to compile *Job classes
    }
}

version "7.3"
group "cloudwebapp"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

bootRun {
    systemProperty 'server.port', '8086'
}

dependencies {
    implementation 'javax.jms:javax.jms-api:2.0.1'
    implementation 'org.apache.activemq:activemq-pool:5.18.2'

    developmentOnly("org.springframework.boot:spring-boot-devtools")
//    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails.plugins:spring-security-core:6.1.1"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.6.3'
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation 'com.google.code.gson:gson:2.8.9'

    implementation "org.grails.plugins:cache", { exclude group: "org.codehaus.groovy", module: "groovy-all" }
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.google.guava:guava:31.0.1-jre'
    profile "org.grails.profiles:web"
//    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
//    compileOnly group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.11', ext: 'pom'

//    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.6"
    //testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:3.14.0"

    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:3.141.59"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:3.141.59"
//    implementation 'org.quartz-scheduler:quartz' // Is not pulled in by default
//    implementation 'org.grails.plugins:quartz:2.0.13' // Needed to compile *Job classes
    implementation 'com.bertramlabs.plugins:i18n-asset-pipeline-grails:3.3.6'
    implementation 'javax.mail:mail:1.4.7'
}

tasks.register('prepareKotlinBuildScriptModel') {
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

assetCompile.dependsOn(':cloudwebapp:setVersion')
bootWar.dependsOn(':cloudFrontEnd:buildClient')

bootWar {
    webInf {
        from('../cloudFrontEnd/dist/client')
        include '**/*'
        into('classes/public')
    }
}

tasks.register('setVersion', Exec) {
    group = 'build'
    description = 'Sets the version.txt file with the current version from git describe'
    workingDir "$projectDir"
    executable "sh"
    args = ['-c', 'mkdir -p grails-app/assets/version && git describe --tags --dirty | tr -d \'\\n\' > grails-app/assets/version/version.txt']
}

tasks.register('buildDebFile', Exec) {
    dependsOn[':cloudwebapp:assemble']
    group = 'build'
    workingDir "$projectDir/../xtrn-files-and-config/deb-file-creation"
    commandLine './create-deb.sh'
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


assets {
    minifyJs = true
    minifyCss = true
}
