#!/bin/bash

mv /tmp/nginx.conf /etc/nginx
mv /tmp/server.xml /etc/tomcat9/
mv /tmp/tomcat-users.xml /etc/tomcat9
mv /tmp/cloudwebapp-7.3.war /var/lib/tomcat9/webapps/ROOT.war
rm -r /var/lib/tomcat9/webapps/ROOT

deb-systemd-invoke stop tomcat9.service  # Stop tomcat before
useradd usr-cloud
groupadd grp-cloud
usermod -a -G grp-cloud tomcat
usermod -a -G grp-cloud usr-cloud

chown -R usr-cloud:grp-cloud /var/cloud
chown -R usr-cloud:grp-cloud /var/log/cloud

chown tomcat:grp-cloud /var/log/cloud/cloud.log* || true # To prevent access denied errors on first starting tomcat
chown -R tomcat:grp-cloud /var/cloud/ || true
chown tomcat:tomcat /var/lib/tomcat9/webapps/ROOT.war
chmod 640 /etc/tomcat9/tomcat-users.xml
chown root:tomcat /etc/tomcat9/tomcat-users.xml
chmod 640 /etc/tomcat9/server.xml
chown root:tomcat /etc/tomcat9/server.xml
chown root:tomcat /etc/cloud/client.ks /etc/cloud/client.ts /etc/cloud/privateKey
chmod 440 /etc/cloud/client.ks /etc/cloud/client.ts /etc/cloud/privateKey

#A new group, grp-cloud, is added, then the users tomcat and usr-cloud added to that group.
# The grp-cloud group is then given group access to usr-cloud and it's subdirectories. The user and group permissions are then set up.

# Give directories only permission 775
find /var/cloud -type d -print0 | xargs -0 chmod 775
# Give files permission 664
find /var/cloud -type f -print0 | xargs -0 chmod 664

mv /tmp/install-cert.sh /var/cloud/
chown root:root /var/cloud/install-cert.sh
mv /tmp/tomcat9 /etc/default/  # Updated tomcat9 default file to enable use of Java 17

chgrp -R grp-cloud /var/cloud/

#
# AddToTomcatUnitFileIfNotPresent: Add ReadWriteFilePaths to the tomcat unit file to enable access to /etc/security-cam
#                                  and /var/log/security-cam.
#
AddToTomcatUnitFileIfNotPresent() {
  lineToWrite=$1
  lineToWriteUnder=$2
  unitFile=$3
  # Enter lineToWrite after lineToWriteUnder if not already present
  if ! grep "$lineToWrite" "$unitFile"; then
    # Add the line after lineToWriteUnder escaping all '/' as the regex is within / delimiters.
    result=$(awk '/'"${lineToWriteUnder//\//\\/}"'/ { print; print '\""${lineToWrite}"\"'; next }1' "$unitFile")
    echo "$result" >"$unitFile"
  fi
}

# Give tomcat permission to write to some additional directories
lineToWrite="ReadWritePaths=/var/cloud/"
lineToWrite2="ReadWritePaths=/var/log/cloud/"
lineToWriteUnder="ReadWritePaths=/var/lib/tomcat9/webapps/"
unitFile="/usr/lib/systemd/system/tomcat9.service"

AddToTomcatUnitFileIfNotPresent $lineToWrite $lineToWriteUnder $unitFile
AddToTomcatUnitFileIfNotPresent $lineToWrite2 $lineToWriteUnder $unitFile

# Start the services
systemctl daemon-reload
deb-systemd-invoke enable tomcat9.service
deb-systemd-invoke start tomcat9.service
deb-systemd-invoke enable nginx.service

CERT_FILE=/etc/nginx/cloud.crt
if test -f "$CERT_FILE"; then
   deb-systemd-invoke start nginx.service
else
   deb-systemd-invoke stop nginx.service  # On initial install, the certificate won't be present so
                                          # stop
                                          # nginx as it can't work till that is set up.
   echo "To add or update the site key/certificate, run sudo install-cert.sh at www-root."
   echo "Use sudo systemctl start nginx to run nginx."
fi
